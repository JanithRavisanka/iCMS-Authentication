name: Build and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          platforms: linux/arm64

      - name: Logout from Docker Hub
        run: docker logout
        
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name my-cluster
          kubectl apply -f - <<EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: fastapi-app
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: fastapi
            template:
              metadata:
                labels:
                  app: fastapi
              spec:
                containers:
                  - name: fastapi
                    image: ${{ secrets.DOCKER_USERNAME }}/my-app:latest
                    ports:
                      - containerPort: 8000
                    env:
                      - name: AWS_ACCESS_KEY_ID
                        valueFrom:
                          secretKeyRef:
                            name: aws-secrets
                            key: AWS_ACCESS_KEY_ID
                      - name: AWS_SECRET_ACCESS_KEY
                        valueFrom:
                          secretKeyRef:
                            name: aws-secrets
                            key: AWS_SECRET_ACCESS_KEY
                      - name: AWS_REGION
                        value: ${{ secrets.AWS_DEFAULT_REGION }}
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: fastapi-service
          spec:
            type: LoadBalancer
            ports:
              - port: 80
                targetPort: 8000
            selector:
              app: fastapi
          EOF
